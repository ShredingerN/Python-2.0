# Создайте вручную кортеж содержащий элементы разных типов. Получите из него словарь списков, где ключ - тип элемента,
# а значение - список элементов данного типа.

# a = (1, 1, 2, 3, 'two', 'ffd', 'der', 1.0, 2.0, [1,2])
# answer = {}
# for i in a:
#     answer[type(i)] = answer.get(type(i), []) + [i]
#     answer[type(i)].append(i)
# print(answer)

# Создайте вручную список с повторяющимися элементами. Удалите из него все элементы, которые встречаются дважды.

# a = [1, 2, 3, 4, 4, 5, 6, 6, 7, 7, 9, 9, 0, 8, 8]
# for i in set(a):
#     if a.count(i) == 2:
#         a.remove(i)
#         a.remove(i)
# print(a)
# print(a.count(8))

# Создайте вручную список с повторяющимися целыми числами. Сформируйте список с порядковыми номерами нечётных
# элементов исходного списка. Нумерация начинается с единицы.
# a = [1, 2, 3, 4, 4, 5, 6, 6, 7, 7, 9, 9, 0, 8, 8]
# new_a = []
# for n, el in enumerate(a, start =1):
#     if el % 2 != 0:
#         new_a.append(n)
# print(new_a)

# Пользователь вводит строку текста. Вывести каждое слово с новой строки.
# Строки нумеруются начиная с единицы
# Слова выводятся отсортированными согласно кодировки Unicode
# Текст выравнивается по правому краю так, чтобы у самого длинного слова был один пробел между ним и номером строки

# n = input()
# a = sorted(n.split())
# max_len = 0
# # max_len = len(max(a, key=len))
# for el in a:
#     if len(el) > max_len:
#         max_len = len(el)
#
# for n, el in enumerate(a, start=1):
#     print(f'{n} {el:>{max_len}}')

# Пользователь вводит строку текста. Подсчитайте сколько раз встречается каждая буква в строке без использования
# метода count и с ним. Результат сохраните в словаре, где ключ - символ, а значение - частота встречи символа в строке.
# Обратите внимание на порядок ключей. Объясните почему они совпадают или не совпадают в ваших решениях.

a = 'пользователь вводит строку текста'
result = {}
res = {}
for i in a:
    result[i] = result.get(i, 0) + 1
print(result)

for i in a:
    if i not in res:
        res[i] = a.count(i)
print(res)
